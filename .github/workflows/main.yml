name: Build Binaries and Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  macos-build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - run: brew install boost ilmbase openexr tbb@2020 glm libomp

    - name: Run tests
      run: make test
    - name: Release build
      run: make

    - uses: actions/upload-artifact@v2
      with:
        name: curv-mac-${{ github.sha }}
        path: |
          release/curv
          lib

  windows-build:
    runs-on: windows-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: "git diffutils mingw-w64-x86_64-clang make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-mesa mingw-w64-x86_64-openexr mingw-w64-x86_64-intel-tbb mingw-w64-x86_64-glm mingw-w64-x86_64-glew mingw-w64-x86_64-dbus patch mingw-w64-x86_64-openvdb mingw-w64-x86_64-ccache"

    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: .ccache
        key: ${{matrix.config.name}}-ccache-${{ github.sha }}
        restore-keys: |
          ${{matrix.config.name}}-ccache-

    - name: Build Curv
      shell: msys2 {0}
      run: make
    - name: Test built executable
      shell: msys2 {0}
      run: ./release/curv --version

    - name: Copy runtime dependencies to build dir
      shell: msys2 {0}
      run: |
        cp /mingw64/bin/libHalf*.dll ./release
        cp /mingw64/bin/tbb.dll ./release
        cp /mingw64/bin/libopenvdb.dll ./release
        cp /mingw64/bin/libboost_filesystem-mt.dll ./release
    - uses: actions/upload-artifact@v2
      with:
        name: curv-win-${{ github.sha }}
        path: |
          release/*.exe
          release/*.dll
          lib

  linux-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2 
      with:
        submodules: recursive
    - run: sudo apt install clang cmake git-core libboost-all-dev libopenexr-dev libtbb-dev libglm-dev libxrandr-dev libxinerama-dev libxcursor-dev

    - name: Build AppImage
      run: |
        sudo chmod +x ./build-appimage.sh
        bash ./build-appimage.sh

    - uses: actions/upload-artifact@v2
      with:
        name: curv-appimage-${{ github.sha }}
        path: ./curv-x86_64.AppImage