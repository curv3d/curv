let
hash2x2 xy = frac([262144, 32768] * sin(dot[xy, [41, 289]]));

// Points cannot be closer than sqrt(EPSILON)
EPSILON = .00001;

// input: 2D coordinate, output: distance to cell border
voronoi x =
    let
        n = floor(x - 1.5);
        f = x - n;
        md = 8;
    in do
        // first pass: distance to cell centre
        local mr = [0,0];
        for (j in 0 .. 3)
            for (i in 0 .. 3) (
                local g = [i,j];
                local o = hash2x2(n + g);
                local r = g + o - f;
                local d = dot[r,r];
                if (d < md) (
                    md := d;
                    mr := r;
                );
            );
        // second pass: distance to border
        md := 8.0;
        for (j in 0 .. 3)
            for (i in 0 .. 3) (
                local g = [i,j];
                local o = hash2x2( n + g );
                local r = g + o - f;
                if (dot[mr-r,mr-r]>EPSILON) // skip the same cell
                    md := smooth_min[md, dot[0.5*(mr+r), normalize(r-mr)],.2];
            );
    in md;

in
make_shape {
    dist[x,y,z,t] = voronoi[x,y];
    is_2d = true;
} >> offset (.1)
/*
make_texture ((x,y,z,t)->
    let d = voronoi(x,y);
        interior = sRGB[.2,.8,1];
        border = sRGB[.2,.8,.4];
    in lerp(
        d * 2 * (sin(d*12)*.1 + .9) * interior,
        border,
        smoothstep(.08,.06,d)))
 */
